.boardContainer {
  overflow-x: scroll;
}

.board {
  background-color: #000080;
  border: 3px solid #ccf;
  display: flex;
  flex-direction: column;
  border-radius: 2.5rem;
  padding: 1rem;
  gap: 1rem;
  width: fit-content;
  margin: 1em auto;
}

.board > .row {
  display: flex;
  flex-direction: row;
  gap: 1rem;
}

.row > .guess {
  border: 2px solid #ccf;
  border-radius: 50%;
  width: min(10vw, 50px);
  height: min(10vw, 50px);
  transition: transform 80ms;
}

.row > .guess:hover {
  transform: scale(110%, 110%);
}

.row > .guess:active {
  transition: transform 10ms;
  transform: scale(100%, 100%);
}

.row > .pegs {
  height: min(10vw, 50px);
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: min(1vw, 5px);
  margin-left: 4rem;
  margin-right: 2em;
  align-content: center;
}

.peg {
  height: min(3vw, 15px);
  width: min(3vw, 15px);
  border: 1px solid #ccf;
  border-radius: 50%;
}

.board > h2 {
  text-align: center;
}

.board button {
  border-radius: 10vw;
  font-family: inherit;
  font-size: large;
  border: 2px solid #eef;
  background-color: #44a;
  color: #eef;
  transition: transform 80ms;
}

.board button:active {
  transition: transform 10ms;
  transform: scale(100%, 100%);
}

.board button:disabled {
  opacity: 0.4;
}

.board > .actionButton {
  height: 4rem;
  width: 90%;
  margin: auto;
  transition: width 80ms;
}

.board > .actionButton:hover {
  width: 100%;
}

.row > .guessButton {
  width: 8rem;
  margin: 0 1rem;
  transition: width 80ms, margin 80ms;
}

.row > .rowText {
  font-size: 2em;
  margin: 0 1rem;
}

.row.display {
  justify-content: space-evenly;
}

.row > .guessButton:not([disabled]):hover {
  width: 10rem;
  margin: 0;
}

.solutionSpaceGridContainer {
  width: 100%;
}

.solutionSet,
.solutionSpaceGridContainer {
  overflow-x: scroll;
  display: flex;
  justify-content: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.solutionSet,
.solutionSpaceGrid {
  border: 1px solid white;
  border-radius: 1rem;
  padding: 0.5rem;
  background-color: #fff1;
}

.solutionSpaceGrid {
  display: grid;
  /* grid-template-columns: repeat(n, 1fr); 
      Controlled by component in React */
  width: fit-content;
  gap: 0.5rem;
  border: 1px solid white;
}

.solutionSpaceGrid .solution {
  display: flex;
  border: 1px solid #eef;
  background-color: #000080;
  width: fit-content;
  gap: min(1vw, 5px);
  padding: min(1vw, 5px);
  border-radius: 100px;
  transition: transform 80ms;
}

.solutionSpaceGrid .solution:not([disabled]):hover {
  transform: scale(110%, 110%);
}

.solutionSpaceGrid .solution:not([disabled]):active {
  transition: transform 10ms;
  transform: scale(100%, 100%);
}

.solutionSpaceGrid .solution:disabled {
  opacity: 0.15;
}

.inlineSolution {
  display: inline-flex;
  gap: 0.3em;
  border: 1px solid #eef;
  background-color: #000080;
  padding: 0.2em 0.3em;
  border-radius: 1em;
}

.inlineSolution div {
  height: 0.8em;
  width: 0.8em;
  border: 1px solid #ccf;
  border-radius: 50%;
}

.heuristicButtonsGrid {
  display: flex;
  gap: 1rem;
  width: min(100%, 50rem);
  margin: auto;
  flex-direction: column;
}

.heuristicButtonRow {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: space-around;
}

.heuristicButtonsGrid .heuristicButton {
  border-radius: 10vw;
  font-family: inherit;
  font-size: large;
  border: 2px solid #eef;
  background-color: #44a;
  color: #eef;
  transition: all 80ms;
  padding: 0.5rem 2rem;
  margin: auto;
  width: 12rem;
  max-width: 100%;
}

.heuristicButtonsGrid .heuristicButton:hover {
  width: 13rem;
  padding: 0.5rem 3rem;
}